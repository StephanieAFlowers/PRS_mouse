###this code is taken directly from the mothur SOP

###running test

make.contigs(file=prs_test.files, processors=10)
summary.seqs(fasta=current)
screen.seqs(fasta=current, group=current, summary=current, maxambig=0, maxlength=275)
summary.seqs(fasta=current)
get.current()

proccesing improved sequences
unique.seqs(fasta=prs_test.trim.contigs.good.pick.fasta)
count.seqs(name=prs_test.trim.contigs.good.names, group=prs_test.contigs.good.pick.groups)
summary.seqs(count=current)
align.seqs(fasta=current, reference=silva.v4.fasta)
#get.current()

summary.seqs(fasta=prs_test.trim.contigs.good.pick.unique.align, count=prs_test.trim.contigs.good.count_table)
screen.seqs(fasta=current, count=current, summary=current, start=1968, end=11550, maxhomop=8)
summary.seqs(fasta=current, count=current)
filter.seqs(fasta=current, vertical=T, trump=.)
#get.current()

chimera.vsearch(fasta=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.fasta, count=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.count_table, dereplicate=t)
remove.seqs(fasta=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.fasta, accnos=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.accnos)
#summary.seqs(fasta=current, count=current)
classify.seqs(fasta=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta, count=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.count_table, reference=trainset9_032012.pds.fasta, taxonomy=trainset9_032012.pds.tax, cutoff=80)
remove.lineage(fasta=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.fasta, count=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.count_table, taxonomy=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.taxonomy, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota)
#summary.tax(taxonomy=current, count=current)
#get.current()


###Assessing error

get.groups(count=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table, fasta=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta, groups=Mock)
seq.error(fasta=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta, count=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table, reference=HMP_MOCK.v35.fasta, aligned=F)

###Preparing for analysis

remove.groups(count=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table, fasta=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta, taxonomy=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.taxonomy, groups=Mock)

#OTUs
cluster.split(fasta=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta, count=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table, taxonomy=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.taxonomy, splitmethod=classify, taxlevel=4, cutoff=0.03)

make.shared(list=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.list, count=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table, label=0.03)

classify.otu(list=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.list, count=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table, taxonomy=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.taxonomy, label=0.03)

###phylotypes
phylotype(taxonomy=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.taxonomy)

make.shared(list=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.tx.list, count=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table, label=1)

classify.otu(list=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.tx.list, count=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table, taxonomy=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.pick.taxonomy, label=1)


dist.seqs(fasta=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta, output=lt, processors=8)
clearcut(phylip=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.phylip.dist)

rename.file(taxonomy=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.0.03.cons.taxonomy, shared=prs_test.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.shared)

count.groups(shared=prs_test.opti_mcc.shared)
sub.sample(shared=prs_test.opti_mcc.shared, size=2000)

##alpha diversity

rarefaction.single(shared=prs_test.opti_mcc.shared, calc=sobs, freq=100)
summary.single(shared=prs_test.opti_mcc.shared, calc=nseqs-coverage-sobs-invsimpson, subsample=T)


##beta diversity


dist.shared(shared=prs_test.opti_mcc.shared, calc=thetayc-jclass, subsample=t)
pcoa(phylip=prs_test.opti_mcc.thetayc.0.03.lt.ave.dist)
nmds(phylip=prs_test.opti_mcc.thetayc.0.03.lt.ave.dist)
nmds(phylip=prs_test.opti_mcc.thetayc.0.03.lt.ave.dist, mindim=3, maxdim=3)
amova(phylip=prs_test.opti_mcc.thetayc.0.03.lt.ave.dist, design=mouse.time.design)
homova(phylip=prs_test.opti_mcc.thetayc.0.03.lt.ave.dist, design=mouse.time.design)
corr.axes(axes=prs_test.opti_mcc.thetayc.0.03.lt.ave.pcoa.axes, shared=prs_test.opti_mcc.0.03.subsample.shared, method=spearman, numaxes=3)

metastats(shared=prs_test.opti_mcc.0.03.subsample.shared, design=mouse.time.design)


lefse(shared=prs_test.opti_mcc.0.03.subsample.shared, design=mouse.time.design)
